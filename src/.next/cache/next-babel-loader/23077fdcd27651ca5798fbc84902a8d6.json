{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\n// Import Middleware e Redux\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // Import InitialState\n\nimport { initialState } from './store'; // Import Tipos de Actions\n\nimport { actionTypes } from './actions'; // Reducers\n\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.MODAL_STATUS:\n      return _Object$assign({}, state, {\n        modalStatus: action.modalStatus,\n        loaderStatus: false,\n        sucessModal: false\n      });\n\n    case actionTypes.LOADER_STATUS:\n      return _Object$assign({}, state, {\n        loaderStatus: action.loaderStatus\n      });\n\n    case actionTypes.SHOW_MODAL_SUCCESS:\n      return _Object$assign({}, state, {\n        loaderStatus: false,\n        sucessModal: true\n      });\n\n    default:\n      return state;\n  }\n}; // Inicializa a Store\n\nexport function initializeStore(initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware()));\n}","map":{"version":3,"sources":["C:\\Users\\Diego\\Desktop\\vanhack-challenge\\src\\redux\\reducers.js"],"names":["createStore","applyMiddleware","composeWithDevTools","initialState","actionTypes","reducer","state","action","type","MODAL_STATUS","modalStatus","loaderStatus","sucessModal","LOADER_STATUS","SHOW_MODAL_SUCCESS","initializeStore"],"mappings":";AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,YAAT,QAA6B,SAA7B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAW,CAACK,YAAjB;AACE,aAAO,eAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BI,QAAAA,WAAW,EAAEH,MAAM,CAACG,WADU;AAE9BC,QAAAA,YAAY,EAAE,KAFgB;AAG9BC,QAAAA,WAAW,EAAE;AAHiB,OAAzB,CAAP;;AAKA,SAAKR,WAAW,CAACS,aAAjB;AACA,aAAO,eAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC9BK,QAAAA,YAAY,EAAEJ,MAAM,CAACI;AADS,OAAzB,CAAP;;AAGF,SAAKP,WAAW,CAACU,kBAAjB;AACE,aAAO,eAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BK,QAAAA,YAAY,EAAE,KADgB;AAE9BC,QAAAA,WAAW,EAAE;AAFiB,OAAzB,CAAP;;AAIF;AACE,aAAON,KAAP;AAjBJ;AAmBD,CApBM,C,CAsBP;;AACA,OAAO,SAASS,eAAT,CAA0BZ,YAA1B,EAAwC;AAC7C,SAAOH,WAAW,CAChBK,OADgB,EAEhBF,YAFgB,EAGhBD,mBAAmB,CAACD,eAAe,EAAhB,CAHH,CAAlB;AAKD","sourcesContent":["// Import Middleware e Redux\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n// Import InitialState\nimport { initialState } from './store';\n\n// Import Tipos de Actions\nimport { actionTypes } from './actions';\n\n// Reducers\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MODAL_STATUS:\n      return Object.assign({}, state, {\n        modalStatus: action.modalStatus,\n        loaderStatus: false,\n        sucessModal: false\n      })\n      case actionTypes.LOADER_STATUS:\n      return Object.assign({}, state, {\n        loaderStatus: action.loaderStatus\n      })\n    case actionTypes.SHOW_MODAL_SUCCESS:\n      return Object.assign({}, state, {\n        loaderStatus: false,\n        sucessModal: true\n      })\n    default:\n      return state\n  }\n}\n\n// Inicializa a Store\nexport function initializeStore (initialState) {\n  return createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware())\n  )\n}"]},"metadata":{},"sourceType":"module"}