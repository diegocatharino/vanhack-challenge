{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _options;\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Chart } from \"react-google-charts\";\nimport spinner from '../../../static/images/spinner.gif';\nimport { ChartContent } from './styled';\nvar chartEvents = [{\n  eventName: \"select\",\n  callback: function callback(_ref) {\n    var chartWrapper = _ref.chartWrapper;\n    console.log(\"Selected \", chartWrapper.getChart().getSelection());\n  }\n}];\nvar data = [[\"\", \"\"], [\"Mar\", 170], [\"\", 220], [\"May\", 180], [\"\", 200], [\"Jul\", 100], [\"\", 230], [\"Sep\", 170], [\"\", 190], [\"Nov\", 230], [\"\", 220], [\"Jan\", 250]];\nvar options = (_options = {\n  title: \"Months vs. Earnings\",\n  hAxis: {\n    title: \"Earnings\"\n  },\n  vAxis: {\n    title: \"Months\"\n  },\n  legend: \"none\",\n  chartArea: {\n    width: '85%',\n    height: '70%',\n    top: 10,\n    right: 5\n  },\n  titlePosition: 'none',\n  axisTitlesPosition: 'out'\n}, _defineProperty(_options, \"hAxis\", {\n  textPosition: 'out',\n  gridlines: {\n    color: '#333',\n    count: 6\n  }\n}), _defineProperty(_options, \"vAxis\", {\n  textPosition: 'out',\n  format: '$#'\n}), _options);\n\nvar earningChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(earningChart, _React$Component);\n\n  function earningChart() {\n    _classCallCheck(this, earningChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(earningChart).apply(this, arguments));\n  }\n\n  _createClass(earningChart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ChartContent, null, React.createElement(Chart, {\n        chartType: \"LineChart\",\n        data: data,\n        options: options,\n        graphID: \"LineChart\",\n        width: \"100%\",\n        height: \"180px\",\n        chartEvents: chartEvents,\n        loader: React.createElement(\"div\", {\n          className: \"spinner\"\n        }, React.createElement(\"img\", {\n          src: spinner\n        }))\n      }));\n    }\n  }]);\n\n  return earningChart;\n}(React.Component);\n\nexport default earningChart;","map":{"version":3,"sources":["C:\\Users\\Diego\\Desktop\\vanhack-challenge\\src\\components\\molecules\\chart\\index.js"],"names":["React","render","Chart","spinner","ChartContent","chartEvents","eventName","callback","chartWrapper","console","log","getChart","getSelection","data","options","title","hAxis","vAxis","legend","chartArea","width","height","top","right","titlePosition","axisTitlesPosition","textPosition","gridlines","color","count","format","earningChart","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,IAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,QAFF,0BAE6B;AAAA,QAAhBC,YAAgB,QAAhBA,YAAgB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,YAAY,CAACG,QAAb,GAAwBC,YAAxB,EAAzB;AACD;AAJH,CADkB,CAApB;AASA,IAAMC,IAAI,GAAG,CACX,CAAC,EAAD,EAAK,EAAL,CADW,EAEX,CAAC,KAAD,EAAQ,GAAR,CAFW,EAGX,CAAC,EAAD,EAAK,GAAL,CAHW,EAIX,CAAC,KAAD,EAAQ,GAAR,CAJW,EAKX,CAAC,EAAD,EAAK,GAAL,CALW,EAMX,CAAC,KAAD,EAAQ,GAAR,CANW,EAOX,CAAC,EAAD,EAAK,GAAL,CAPW,EAQX,CAAC,KAAD,EAAQ,GAAR,CARW,EASX,CAAC,EAAD,EAAK,GAAL,CATW,EAUX,CAAC,KAAD,EAAQ,GAAR,CAVW,EAWX,CAAC,EAAD,EAAK,GAAL,CAXW,EAYX,CAAC,KAAD,EAAQ,GAAR,CAZW,CAAb;AAeA,IAAMC,OAAO;AACXC,EAAAA,KAAK,EAAE,qBADI;AAEXC,EAAAA,KAAK,EAAE;AACLD,IAAAA,KAAK,EAAE;AADF,GAFI;AAKXE,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE;AADF,GALI;AAQXG,EAAAA,MAAM,EAAE,MARG;AASXC,EAAAA,SAAS,EAAE;AAACC,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,MAAM,EAAE,KAAvB;AAA8BC,IAAAA,GAAG,EAAE,EAAnC;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GATA;AAUXC,EAAAA,aAAa,EAAE,MAVJ;AAUYC,EAAAA,kBAAkB,EAAE;AAVhC,sCAWJ;AAACC,EAAAA,YAAY,EAAE,KAAf;AAAsBC,EAAAA,SAAS,EAAE;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB;AAAjC,CAXI,sCAYJ;AAACH,EAAAA,YAAY,EAAE,KAAf;AAAsBI,EAAAA,MAAM,EAAE;AAA9B,CAZI,YAAb;;IAeMC,Y;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,YAAD,QACA,oBAAC,KAAD;AACK,QAAA,SAAS,EAAC,WADf;AAEK,QAAA,IAAI,EAAElB,IAFX;AAGK,QAAA,OAAO,EAAEC,OAHd;AAIK,QAAA,OAAO,EAAC,WAJb;AAKK,QAAA,KAAK,EAAC,MALX;AAMK,QAAA,MAAM,EAAC,OANZ;AAOK,QAAA,WAAW,EAAET,WAPlB;AAQM,QAAA,MAAM,EAAE;AAAK,UAAA,SAAS,EAAC;AAAf,WAAyB;AAAK,UAAA,GAAG,EAAEF;AAAV,UAAzB;AARd,QADA,CADF;AAcD;;;;EAhBwBH,KAAK,CAACgC,S;;AAmBjC,eAAeD,YAAf","sourcesContent":["import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport spinner from '../../../static/images/spinner.gif';\r\nimport { ChartContent } from './styled';\r\n\r\nconst chartEvents = [\r\n  {\r\n    eventName: \"select\",\r\n    callback({ chartWrapper }) {\r\n      console.log(\"Selected \", chartWrapper.getChart().getSelection());\r\n    }\r\n  }\r\n];\r\n\r\nconst data = [\r\n  [\"\", \"\"],\r\n  [\"Mar\", 170],\r\n  [\"\", 220],\r\n  [\"May\", 180],\r\n  [\"\", 200],\r\n  [\"Jul\", 100],\r\n  [\"\", 230],\r\n  [\"Sep\", 170],\r\n  [\"\", 190],\r\n  [\"Nov\", 230],\r\n  [\"\", 220],\r\n  [\"Jan\", 250]\r\n];\r\n \r\nconst options = {\r\n  title: \"Months vs. Earnings\",\r\n  hAxis: { \r\n    title: \"Earnings\"\r\n  },\r\n  vAxis: { \r\n    title: \"Months\"\r\n  },\r\n  legend: \"none\",\r\n  chartArea: {width: '85%', height: '70%', top: 10, right: 5},\r\n  titlePosition: 'none', axisTitlesPosition: 'out',\r\n  hAxis: {textPosition: 'out', gridlines: {color: '#333', count: 6}}, \r\n  vAxis: {textPosition: 'out', format: '$#'}\r\n};\r\n\r\nclass earningChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <ChartContent>\r\n    \t\t<Chart\r\n    \t      chartType=\"LineChart\"\r\n    \t      data={data}\r\n    \t      options={options}\r\n    \t      graphID=\"LineChart\"\r\n    \t      width=\"100%\"\r\n    \t      height=\"180px\"\r\n    \t      chartEvents={chartEvents}\r\n            loader={<div className=\"spinner\"><img src={spinner} /></div>}\r\n        \t/>\r\n      </ChartContent>\r\n    );\r\n  }\r\n}\r\n\r\nexport default(earningChart);\r\n"]},"metadata":{},"sourceType":"module"}